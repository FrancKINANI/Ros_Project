<?xml version="1.0"?>
<robot name="differential_drive_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Body dimensions -->
    <xacro:property name="body_link_x_dim" value="1"/>
    <xacro:property name="body_link_y_dim" value="0.6"/>
    <xacro:property name="body_link_z_dim" value="0.3"/>

    <!-- Wheel dimensions -->
    <xacro:property name="wheel_link_radius" value="0.15"/>
    <xacro:property name="wheel_link_length" value="0.1"/>
    <xacro:property name="wheel_link_z_location" value="-0.1"/>

    <!-- Material density -->
    <xacro:property name="body_density" value="2710.0"/>
    <xacro:property name="wheel_density" value="2710.0"/>

    <!-- Pi constant -->
    <xacro:property name="pi_const" value="3.14159265"/>

    <!-- Robot body and wheel mass -->
    <xacro:property name="body_mass" value="${body_density*body_link_x_dim*body_link_y_dim*body_link_z_dim}"/>
    <xacro:property name="wheel_mass" value="${wheel_density*pi_const*wheel_link_radius*wheel_link_radius*wheel_link_length}"/>

    <!-- Moments of inertia of the wheel -->
    <xacro:property name="Iz_wheel" value="${0.5*wheel_mass*wheel_link_radius*wheel_link_radius}" />
    <xacro:property name="I_wheel" value="${(1.0/12.0)*wheel_mass*(3.0*wheel_link_radius*wheel_link_radius+wheel_link_length*wheel_link_length)}" />

    <!-- Camera properties -->
    <xacro:property name="camera_width" value="800"/>
    <xacro:property name="camera_height" value="800"/>
    <xacro:property name="camera_fov" value="1.5707"/>
    <xacro:property name="camera_range" value="10.0"/>
    <xacro:property name="camera_mass" value="0.1"/>

    <!-- Lidar properties -->
    <xacro:property name="lidar_samples" value="720"/>
    <xacro:property name="lidar_resolution" value="1.0"/>
    <xacro:property name="lidar_range" value="30.0"/>

    <!-- This macro defines the complete inertial section of the wheel -->
    <xacro:macro name="inertia_wheel">
        <inertial>
            <origin rpy="0 1.570795 1.570795" xyz="0 0 0"/>
            <mass value="${wheel_mass}"/>
            <inertia ixx="${I_wheel}" ixy="0.0" ixz="0.0" iyy="${I_wheel}" iyz="0" izz="${Iz_wheel}" />
        </inertial>
    </xacro:macro>

    <!-- Define links and joints -->
    <!-- Body link -->
    <link name="body_link">
        <visual>
            <geometry>
                <box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}" />
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </visual>

        <collision>
            <geometry>
                <box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}" />
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="${body_mass}"/>
            <inertia 
                ixx="${(1/12)*body_mass*(body_link_y_dim*body_link_y_dim+body_link_z_dim*body_link_z_dim)}" ixy="0"
                ixz="0" iyy="${(1/12)*body_mass*(body_link_x_dim*body_link_x_dim+body_link_z_dim*body_link_z_dim)}"
                iyz="0"
                izz="${(1/12)*body_mass*(body_link_y_dim*body_link_y_dim+body_link_x_dim*body_link_x_dim)}" />
        </inertial>
    </link>

    <!-- Wheel links and joints -->
    <link name="wheel1_link">
        <visual>
          <origin rpy="0 1.570795 1.570795" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
          </geometry>
        </visual>
        <collision>
          <origin rpy="0 1.570795 1.570795" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
          </geometry>
        </collision>
        <xacro:inertia_wheel/>
    </link>
    
    <link name="wheel2_link">
        <visual>
          <origin rpy="0 1.570795 1.570795" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
          </geometry>
        </visual>
        <collision>
          <origin rpy="0 1.570795 1.570795" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
          </geometry>
        </collision>
        <xacro:inertia_wheel/>
    </link>

    <link name="wheel3_link">
        <visual>
          <origin rpy="0 1.570795 1.570795" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
          </geometry>
        </visual>
        <collision>
          <origin rpy="0 1.570795 1.570795" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
          </geometry>
        </collision>
        <xacro:inertia_wheel/>
    </link>
    
    <link name="wheel4_link">
        <visual>
          <origin rpy="0 1.570795 1.570795" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
          </geometry>
        </visual>
        <collision>
          <origin rpy="0 1.570795 1.570795" xyz="0 0 0"/>
          <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
          </geometry>
        </collision>
        <xacro:inertia_wheel/>
    </link>
    <link name="camera_link">
        <visual>
            <geometry>
                <box size="0.05 0.05 0.05" />
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </visual>
        <inertial>
			<mass value="${camera_mass}"/>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia
		        ixx="1e-6" ixy="0.0" ixz="0.0"
		        iyy="1e-6" iyz="0.0"
		        izz="1e-6"
		    />
		</inertial>
        <collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.05 0.05 0.05"/>
			</geometry>
		</collision>
    </link>

    <link name="lidar_link">
        <visual>
            <geometry>
                <cylinder length="0.05" radius="0.03"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </visual>
        <sensor type="ray" name="lidar">
            <ray>
                <scan>
                    <horizontal>
                        <samples>${lidar_samples}</samples>
                        <resolution>${lidar_resolution}</resolution>
                        <min_angle>-1.5708</min_angle>
                        <max_angle>1.5708</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.0</min>
                    <max>${lidar_range}</max>
                </range>
            </ray>
            <plugin name="lidar_controller" filename="libgazebo_ros_laser.so"/>
        </sensor>
    </link>

    <!-- Dummy link to avoid Gazebo complaints -->
    <link name="dummy"></link>

    <joint name="wheel1_joint" type="continuous">
        <parent link="body_link"/>
        <child link="wheel1_link"/>
        <origin xyz="${-body_link_x_dim/2+1.2*wheel_link_radius} ${-body_link_y_dim/2-wheel_link_length/2} ${wheel_link_z_location}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit effort="1000" velocity="1000"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <joint name="wheel2_joint" type="continuous">
        <parent link="body_link"/>
        <child link="wheel2_link"/>
        <origin xyz="${-body_link_x_dim/2+1.2*wheel_link_radius} ${body_link_y_dim/2+wheel_link_length/2} ${wheel_link_z_location}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit effort="-1000" velocity="-1000"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <joint name="wheel3_joint" type="continuous">
        <parent link="body_link"/>
        <child link="wheel3_link"/>
        <origin xyz="${body_link_x_dim/2-1.2*wheel_link_radius} ${-body_link_y_dim/2-wheel_link_length/2} ${wheel_link_z_location}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit effort="-1000" velocity="-1000"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <joint name="wheel4_joint" type="continuous">
        <parent link="body_link"/>
        <child link="wheel4_link"/>
        <origin xyz="${body_link_x_dim/2-1.2*wheel_link_radius} ${body_link_y_dim/2+wheel_link_length/2} ${wheel_link_z_location}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit effort="1000" velocity="1000"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <!-- Camera link and joint -->
    <joint name="camera_joint" type="fixed">
        <parent link="body_link"/>
        <child link="camera_link"/>
        <origin xyz="${body_link_x_dim/2} 0 ${wheel_link_z_location + body_link_z_dim/2}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>   
    </joint>
    <!-- Lidar link and joint -->
    <joint name="lidar_joint" type="fixed">
        <parent link="body_link"/>
        <child link="lidar_link"/>
        <origin xyz="${body_link_x_dim/2} 0 ${body_link_z_dim/2}" rpy="0 0 0"/> <!--${body_link_z_dim/2 + 0.05} -->
        <axis xyz="0 1 0"/>  
    </joint>

    <joint name="dummy_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="dummy"/>
        <child link="body_link"/>
    </joint>

    <!-- Matériau et coefficients de friction pour le corps du robot -->
    <gazebo reference="body_link">
        <material>Gazebo/Blue</material>
		<kp>1000000.0</kp> <!-- kp and kd for rubber -->
		<kd>100.0</kd>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
    </gazebo>

    <!-- Matériau et coefficients de friction pour les roues -->
    <gazebo reference="wheel1_link">
        <material>Gazebo/Yellow</material>
        <kp>1000000.0</kp> <!-- kp and kd for rubber -->
        <kd>100.0</kd>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
    </gazebo>

    <gazebo reference="wheel2_link">
        <material>Gazebo/Red</material>
        <kp>1000000.0</kp> <!-- kp and kd for rubber -->
        <kd>100.0</kd>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
    </gazebo>

    <gazebo reference="wheel3_link">
        <material>Gazebo/Grey</material>
        <kp>1000000.0</kp> <!-- kp and kd for rubber -->
        <kd>100.0</kd>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
    </gazebo>

    <gazebo reference="wheel4_link">
        <material>Gazebo/Purple</material>
        <kp>1000000.0</kp> <!-- kp and kd for rubber -->
        <kd>100.0</kd>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
    </gazebo>

    <!-- Include the file that defines extra Gazebo options and motion control driver -->
    <xacro:include filename="$(find robot_model_one_pkg)/urdf/robot.gazebo" />
</robot>
