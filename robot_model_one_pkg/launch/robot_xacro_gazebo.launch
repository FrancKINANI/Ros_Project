<launch>
  <!-- Robot pose -->
	<arg name="x" default="0"/>
	<arg name="y" default="0"/>
	<arg name="z" default="0"/>
	<arg name="roll" default="0"/>
	<arg name="pitch" default="0"/>
	<arg name="yaw" default="1.57"/>
  
  <node name="diff_drive_controller" pkg="diff_drive_controller" type="diff_drive_controller_node" output="screen">
    <remap from="cmd_vel" to="cmd_vel" />
    <remap from="odom" to="odom" />
    <param name="base_frame_id" value="base_link" />
    <param name="wheel_separation" value="0.65" /> <!-- Remplacez par la valeur réelle de votre robot -->
    <param name="wheel_radius" value="0.1" /> <!-- Remplacez par la valeur réelle de votre robot -->
    <param name="publish_rate" value="50" />
    <param name="pose_covariance_diagonal" value="0.001 0.001 0.001 0.001 0.001 0.01" />
    <param name="twist_covariance_diagonal" value="0.001 0.001 0.001 0.001 0.001 0.01" />
  </node>
  
  <!-- Chargement de la description du robot -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robot_model_one_pkg)/urdf/robot.xacro'" />

  <!-- World File -->
	<arg name="world_file" default="$(find robot_model_one_pkg)/worlds/empty.world"/>


  <!-- Launch Gazebo World -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="false"/>
    <arg name="world_name" value="$(arg world_file)"/>
  </include>


  <!-- Apparition du modèle du robot -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0"/>
    <param name="tf_prefix" type="string" value=""/>
  </node>

  <!-- Send fake joint values-->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
</node>

  <!-- TF Listener (nécessaire pour transformer les frames) -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_laser" args="0 0 0 0 0 0 base_link laser" /> -->

  <!-- Apparition du modèle du robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
    args="-urdf -model robot_model -param robot_description -model mome
      -x $(arg x) -y $(arg y) -z $(arg z)
			-R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>
</launch>